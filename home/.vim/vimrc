set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
" call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" manually installed bundles
Plugin 'hynek/vim-python-pep8-indent'
Plugin 'scrooloose/syntastic'
Plugin 'Valloric/YouCompleteMe'
Plugin 'wincent/command-t'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-commentary'
Plugin 'pangloss/vim-javascript'
Plugin 'bling/vim-airline'
Plugin 'mileszs/ack.vim'

" All of your Plugins must be added before the following line
call vundle#end()            " required

filetype plugin indent on    " required

syntax on
set expandtab
set softtabstop=2 shiftwidth=2
set number
set clipboard^=unnamed
set backspace=2
set laststatus=2
set lazyredraw
set wildignore+=*.pyc
set mouse=a
set hlsearch
set cursorline
set wildmenu
set tags=tags
set completeopt=menu

set t_Co=256
set background=dark
highlight CursorLine term=none cterm=none ctermbg=234

" Ack config
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif

" Airline config
let g:airline_right_sep = '◀'
let g:airline_left_sep = '▶'

" Syntastic config
let g:syntastic_aggregate_errors = 1
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_enable_signs = 0
let g:syntastic_python_checkers = ['python', 'flake8']
let g:syntastic_javascript_checkers = ['eslint']
hi SyntasticError ctermbg=118 ctermfg=0

" CommandT config
let g:CommandTFileScanner='find'

" YouCompleteMe config
let g:ycm_collect_identifiers_from_tags_files = 1
let g:ycm_seed_identifiers_with_syntax = 1

" Clear trailing whitespace in .py and .js files on save
autocmd BufWritePre *.py,*.js :%s/\s\+$//e

" Remap leader key to space
noremap <space> <nop>
let mapleader = "\<space>"

" Toggle search/syntastic highlighting on/off
nnoremap <silent> <leader>/ :let @/ = ""<bar>SyntasticReset<cr>

" Build ctags with F12
noremap <F12> :!ctags -R --fields=+l --languages=python --python-kinds=-iv -f ./tags $(python -c "import os, sys; print(' '.join('{}'.format(d) for d in sys.path if os.path.isdir(d)))")<cr>

" Cycle through location list
nnoremap <silent> <F2> :try<bar>lnext<bar>catch /^Vim\%((\a\+)\)\=:E\%(553\<bar>42\):/<bar>lfirst<bar>catch /^Vim\%((\a\+)\)\=:E776/<bar>endtry<cr>
nnoremap <silent> <F3> :try<bar>lprevious<bar>catch /^Vim\%((\a\+)\)\=:E\%(553\<bar>42\):/<bar>llast<bar>catch /^Vim\%((\a\+)\)\=:E776/<bar>endtry<cr>

" Cycle through quickfix list
nnoremap <silent> <F4> :try<bar>cnext<bar>catch /^Vim\%((\a\+)\)\=:E\%(553\<bar>42\):/<bar>cfirst<bar>catch /^Vim\%((\a\+)\)\=:E776/<bar>endtry<cr>
nnoremap <silent> <F5> :try<bar>cprevious<bar>catch /^Vim\%((\a\+)\)\=:E\%(553\<bar>42\):/<bar>clast<bar>catch /^Vim\%((\a\+)\)\=:E776/<bar>endtry<cr>

" Handicap arrow keys
map <left> <nop>
map <right> <nop>
map <up> <nop>
map <down> <nop>
