set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
" call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" manually installed bundles
Plugin 'hynek/vim-python-pep8-indent'
Plugin 'scrooloose/syntastic'
Plugin 'Valloric/YouCompleteMe'
Plugin 'wincent/command-t'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-commentary'
Plugin 'pangloss/vim-javascript'
Plugin 'bling/vim-airline'
Plugin 'mileszs/ack.vim'
Plugin 'altercation/vim-colors-solarized'
Plugin 'tweekmonster/braceless.vim'

" All of your Plugins must be added before the following line
call vundle#end()            " required

filetype plugin indent on    " required

syntax on
set expandtab
set shiftwidth=2 tabstop=2 softtabstop=2
set number
set clipboard=unnamedplus
set backspace=2
set laststatus=2
set lazyredraw
set wildignore+=*.pyc
set mouse=a
set hlsearch
set cursorline
set wildmenu
set tags=tags
set completeopt=menu

set undofile
set undodir=~/.vim/undodir//

set t_Co=256
set background=dark
colorscheme solarized

" Ack config
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif

" Airline config
let g:airline_right_sep = '◀'
let g:airline_left_sep = '▶'

" Syntastic config
let g:syntastic_aggregate_errors = 1
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_enable_signs = 0
let g:syntastic_python_checkers = ['python', 'flake8']
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_haskell_checkers = ['hlint']
hi SyntasticError ctermbg=118 ctermfg=0

" CommandT config
let g:CommandTFileScanner='find'

" Clear trailing whitespace in selected file types on save
autocmd BufWritePre *.py,*.js,*.hs,*.html,*.css,*.scss :%s/\s\+$//e

" Remap leader key to space
noremap <space> <nop>
let mapleader = "\<space>"

" Toggle syntax highlighting
nnoremap <silent> <leader>/ :noh<cr>

" Syntastic check
nnoremap <leader>f :SyntasticCheck<cr>

" Cycle through quickfix/location lists
fun! CycleList(nextcom, firstcom)
    try
        try
            execute a:nextcom
        catch /^Vim\%((\a\+)\)\=:E553/
            execute a:firstcom
        catch /^Vim\%((\a\+)\)\=:E776/
        endtry
    catch /^Vim\%((\a\+)\)\=:E42/
    endtry
endfun

nnoremap <silent> <F1> :call CycleList("lnext", "lfirst")<cr>
nnoremap <silent> <F2> :call CycleList("lprev", "llast")<cr>
nnoremap <silent> <F3> :call CycleList("cnext", "cfirst")<cr>
nnoremap <silent> <F4> :call CycleList("cprev", "clast")<cr>

" Paste from PRIMARY buffer
nnoremap <leader>p "*p
vnoremap <leader>p "*p
inoremap <S-Insert> <C-R>*
